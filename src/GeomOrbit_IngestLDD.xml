<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1G00.sch"?>

<Ingest_LDD 
 xmlns="http://pds.nasa.gov/pds4/pds/v1"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://pds.nasa.gov/pds4/pds/v1 
                     https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1G00.xsd">

    <name>Geometry Dictionary Full</name>
    <ldd_version_id>1.9.5.0</ldd_version_id>
    <dictionary_type>Discipline</dictionary_type>
    <full_name>Edward A. Guinness</full_name>
    <steward_id>geo</steward_id>
    <namespace_id>geom</namespace_id>
    <comment>Cumulative comments are in the GeomMain file.
        
        GeomOrbit - Geometry Orbiter/Flyby Section
        
        The Geometry namespace is divided into four major sections:
        Main         This section
        ImageDisplay Geometry mapped to a (properly) displayed image
        Orbit        Orbiter and flyby classes
        Lander       Lander and Rover classes
        
        The Orbiter/Flyby section of the Geometry namespace definition contains the
        definitions classes and attributes found only in the Geometry_Orbiter major
        subclass of the Geometry wrapper class.  Attributes and classes shared with
        other sections of the Geometry namespace are in the Main section.

        Attributes are in alphanetical order. Classes are listed in alphabetical order
        within subcategories based on how deeply they are nested when the first appear.
    </comment>

    <last_modification_date_time>2021-10-25</last_modification_date_time>

    <!-- Attributes - Alphabetical -->

    <DD_Attribute>
        <name>coordinate_system_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>coordinate_system_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The coordinate_system_time_utc provides the instantiation 
          time for the coordinate system.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>coordinate_system_type</name>
        <version_id>1.0</version_id>
        <local_identifier>coordinate_system_type</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The coordinate_system_type distinguishes between options such as
           rectangular, spherical, planetocentric, etc.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Cartesian</value>
                <value_meaning>The coordinate system uses rectangular coordinates. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Azimuth-Elevation</value>
                <value_meaning>The coordinate system uses azimuth-elevation coordinates. 
                  Azimuth: angle from +X axis to projection of position vector on x-y 
                  plane increases in clockwise direction (-180 to +180).
                  Elevation: angle between position vector and x-y plane (-90 to +90).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Spherical</value>
                <value_meaning>The coordinate system uses spherical coordinates.
                  Longitude: angle from +X axis to projection of position vector on 
                  X-Y plane increases in clockwise direction (0 to 360).
                  Colatitude: angle between +Z axis and position vector (0 to 180).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetocentric</value>
                <value_meaning>The coordinate system uses planetocentric coordinates. 
                    Planetocentric longitude increases positively eastward (-180 to +180).
                    Planetocentric latitude increases positively northward (-90 to +90).
                    For planets and their satellites the +Z axis (+90 latitude) always 
                    points to the north side of the invariable plane (the plane whose 
                    normal vector is the angular momentum vector of the solar system).
                    For dwarf planets, asteroids and comets the IAU defines their positive 
                    pole such that their spin is in the right hand sense about 
                    their positive pole. The positive pole may point above or below the 
                    invariable plane of the solar system. This revision by the IAU Working 
                    Group (2006) inverts what had been the direction of the north pole for 
                    Pluto, Charon and Ida. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetodetic</value>
                <value_meaning>The coordinate system uses planetodetic coordinates.
                   For planets and their satellites the +Z axis (+90 latitude) always 
                   points to the north side of the invariable plane (the plane whose 
                   normal vector is the angular momentum vector of the solar system).
                   Planetodetic longitude increases positively eastward (-180 to +180).
                   Planetodetic latitude is tied to a reference ellipsoid. For a point, 
                   P, on a reference ellipsoid, angle measured from X-Y plane to the 
                   surface normal at the point of interest. For other points, equals 
                   latitude at the nearest point on the reference ellipsoid. Increases 
                   positively northward (-90 to +90).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Planetographic</value>
                <value_meaning>The coordinate system uses planetographic coordinates. 
                  For planet and satellite planetographic coordinate systems: 
                  Planetographic longitude is usually defined such that the sub-observer 
                  longitude increases with time as seen by a distant, fixed observer 
                  (0 to 360). The earth, moon and sun are exceptions; planetographic 
                  longitude is positive east by default (0 to 360). Planetographic 
                  latitude is planetodetic latitude (-90 to +90).
                  For dwarf planets, asteroids and comets: there are multiple, inconsistent 
                  standards. Currently, for these objects, PDS permits planetographic 
                  coordinates to be provided in addition to, not in lieu of, either 
                  planetocentric or planetodetic coordinates.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>distance</name>
        <version_id>1.0</version_id>
        <local_identifier>distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The distance attribute provides the scalar distance 
                    between to objects or points.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>geometry_reference_time_tdb</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_reference_time_tdb</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The geometry reference time given in the 'Barycentric Dynamical Time' 
        	  system, as a number of elapsed seconds since the J2000 epoch. This is consistent 
        	  with the definition of 'ephemeris time' as used in the SPICE toolkit. The value 
        	  must correspond to the time specified in the geometry_reference_time_utc attribute.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Time</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>geometry_reference_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_reference_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>For some observations, geometric parameters are given as instantaneous 
        	values at a specific time. Another set of instantaneous parameters are the 
        	parameters which give the minimum and maximum values in the product. 
        	In some cases, these range values are all calculated for the same time. 
        	If the label includes single valued geometric parameters or min/max range parameters 
        	determined for a specific time, geometry_reference_time_utc gives the time for which 
        	these values were calculated and must be given in the label.   	
        	
          For some instruments, particularly those with relatively large exposure durations, 
          (e.g., push broom cameras, many imaging spectrometers), many geometric quantities 
          are given as ranges. If those range parameters are associated with the beginning 
          and end of the observation (start_parameter/stop_parameter), geometry_start_time_utc/stop_time 
          must be given. 
                    
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>geometry_start_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_start_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pair of geometry_start_time_utc/geometry_stop_time_utc may be given in the 
        	label for any observation. The pair is generally used for fairly long duration 
        	observations (a substantial portion of an hour to several hours). geometry_start_time_utc 
        	gives the time at the beginning of the observation.	When either geometry_start_time_utc 
        	or geometry_stop_time_utc is given, both must be provided. 

          Within the Geometry discipline, there are two options for providing geometric parameters
          as a range of values. A parameter may be given as a pair where the parameter values are 
          those at the beginning and end of the observation (start_parameter, stop_parameter). 
          If a (start_parameter, stop_parameter) pair is used for any geometric parameter, the pair 
          (geometry_start_time_utc/geometry_stop_time_utc) must be given.
          
          Another option to provide geometric parameters as a pair is (minimum_parameter, maximum_parameter)
          defining a range of values where the values are the minimum and maximum values of that 
          parameter for the entire observation.  
          
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>geometry_stop_time_utc</name>
        <version_id>1.0</version_id>
        <local_identifier>geometry_stop_time_utc</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pair of geometry_start_time_utc/geometry_stop_time_utc may be given in the 
        	label for any observation. The pair is generally used for fairly long duration  
          observations (a substantial portion of an hour to several hours). geometry_stop_time_utc 
        	gives the time at the end of the observation.	When either geometry_start_time_utc 
        	or geometry_stop_time_utc is given, both must be provided.

          Within the Geometry discipline, there are two options for providing geometric parameters
          as a range of values. A parameter may be given as a pair where the parameter values are 
          those at the beginning and end of the observation (start_parameter, stop_parameter). 
          If a (start_parameter, stop_parameter) pair is used for any geometric parameter, the pair 
          (geometry_start_time_utc/geometry_stop_time_utc) must be given.
          
          Another option to provide geometric parameters as a pair is (minimum_parameter, maximum_parameter)
          defining a range of values where the values are the minimum and maximum values of that 
          parameter for the entire observation.  
          
          Comments within the label should be used to ensure the parameter vs. time association 
          is unambiguous.          
         </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Date_Time_YMD_UTC</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>horizontal_pixel_field_of_view</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_pixel_field_of_view</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The horizontal_pixel_field_of_view provides the angular measure of 
      the horizontal field of view of a single pixel, and is sometimes referred to as 
      the instantaneous field of view. The pixel_field_of_view_method attribute will 
      designate the method used to determine this value. If the pixel_field_of_view_method 
      attribute is not specified, see the camera documentation for more details.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>horizontal_pixel_footprint</name>
        <version_id>1.0</version_id>
        <local_identifier>horizontal_pixel_footprint</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The horizontal_pixel_footprint provides the                      
            the size of the horizontal field of view of a single pixel projected onto 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>lat_long_method</name>
        <version_id>1.0</version_id>
        <local_identifier>lat_long_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell Gordon</submitter_name>
        <definition>The lat_long_method is used with the attributes start_latitude, stop_latitude,
        	start_longitude and stop_longitude. For most observations these parameters would be multivalued. 
        	lat_long_method is used to characterize the start and stop latitude and longitude. The 
        	possible values are: 'center' indicating the latitude and longitude values are those at
        	the center of the field of view at the beginning and end of the observation. 'median' 
        	indicating the latitude and longitude values are the median values at the beginning and 
        	end of the observation. 'mean' indicating the latitude and longitude values are the mean
        	values at the beginning and end of the observation.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Center</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude 
            	are those at the center of the field of view at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Median</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude 
            	are the median values at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Mean</value>
            <value_meaning>The latitude and longitude values given using start_ and stop_ latitude and longitude
            	are the mean values at the beginning and end of the observation.
            </value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
  
    <DD_Attribute>
        <name>light_time_correction_applied</name>
        <version_id>1.0</version_id>
        <local_identifier>light_time_correction_applied</local_identifier>
        <nillable_flag>true</nillable_flag>
        <submitter_name>Boris Semenov</submitter_name>
        <definition>The light_time_correction_applied indicates whether or not light travel time
            correction and stellar aberration correction were used when calculating the values
            in the enclosing class. The attribute is nillable with nill_reason = unknown, but only
            for migrated data. Note: generally, received light travel time is calculated unless
            a transmitter (e.g., radar, radio) was involved in which the calculation typically is
            transmitted light time.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>None</value>
                <value_meaning>Neither light travel time nor stellar aberration was used when 
                  calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Received_Light_Time</value>
                <value_meaning>Received light travel time, but not stellar aberration was used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Received_Light_Time_Stellar_Abb</value>
                <value_meaning>Received light travel time and stellar aberration were used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Transmitted_Light_Time</value>
                <value_meaning>Transmitted light travel time, but not stellar aberration was used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Transmitted_Light_Time_Stellar_Abb</value>
                <value_meaning>Transmitted light travel time and stellar aberration were used 
                  when calculating the values in the enclosing class.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_emission_angle element provides the largest 
            value during the observation for the emission angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_incidence_angle element provides the largest 
            value during the observation for the incidence angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_latitude attribute identifies the final 
        	end of the range of values for Planetocentric latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_longitude attribute identifies the final 
        	end of the range of values for Planetocentric longitude in an image.
        	Note that since Planetocentric longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_longitude will be greater than the value of the maximum_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_phase_angle element provides the largest 
            value during the observation for the phase angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_solar_elongation element provides the largest 
            value during the observation for the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_central_body_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the center of the central body (e.g., the center of Mars when opperating in the 
            Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_geocentric_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_heliocentric_distance attribute provides 
            the largest value during the observation for the distance between the 
            spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_boresight_intercept_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and
            the boresight vector intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_center_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft 
            and the center of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>maximum_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_spacecraft_target_subspacecraft_distance attribute provides 
            the largest value during the observation for the distance between the spacecraft and 
            the subspacecraft point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_azimuth attribute identifies the final 
        	end of the range of values for subsolar azimuth in an image.
        	Note that since subsolar azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subsolar_azimuth will be greater than 
        	the value of the maximum_subsolar_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_latitude attribute identifies the final 
        	end of the range of values for subsolar latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subsolar_longitude attribute identifies the final 
        	end of the range of values for subsolar longitude in an image.
        	Note that since subsolar longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subsolar_longitude will be greater than the value of the 
        	maximum_subsolar_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>maximum_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_azimuth attribute identifies the final 
        	end of the range of values for subspacecraft azimuth in an image.
        	Note that since subspacecraft azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subspacecraft_azimuth will be greater than 
        	the value of the maximum_subspacecraft_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_latitude attribute identifies the final 
        	end of the range of values for subspacecraft latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_subspacecraft_longitude attribute identifies the final 
        	end of the range of values for subspacecraft longitude in an image.
        	Note that since subspacecraft longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subspacecraft_longitude will be greater than the value of the 
        	maximum_subspacecraft_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_geocentric_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the center of the Earth during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_heliocentric_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the center of the Sun during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>maximum_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>maximum_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The maximum_target_ssb_distance attribute provides 
            the largest value for the distance between the center of the 
            target and the Solar System Barycenter during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_emission_angle attribute provides the smallest 
            value during the observation for the emission angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_incidence_angle attribute provides the smallest 
            value during the observation for the incidence angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_latitude attribute identifies the initial 
        	end of the range of values for Planetocentric latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_longitude attribute identifies the initial 
        	end of the range of values for Planetocentric longitude.
        	Note that since Planetocentric longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_longitude will be greater than the value of the maximum_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_phase_angle attribute provides the smallest 
            value during the observation for the phase angle at the target 
            specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_solar_elongation attribute provides the smallest 
            value during the observation for the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_central_body_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the center of the central body (e.g., the center of Mars when opperating in the 
            Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_geocentric_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_heliocentric_distance attribute provides 
            the smallest value during the observation for the distance between the 
            spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_boresight_intercept_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and
            the boresight vector intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_center_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft 
            and the center of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_spacecraft_target_subspacecraft_distance attribute provides 
            the smallest value during the observation for the distance between the spacecraft and 
            the subspacecraft point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

     <DD_Attribute>
        <name>minimum_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_azimuth attribute identifies the initial 
        	end of the range of values for subsolar azimuth in an image.
        	Note that since subsolar azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subsolar_azimuth will be greater than 
        	the value of the maximum_subsolar_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_latitude attribute identifies the initial 
        	end of the range of values for subsolar latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subsolar_longitude attribute identifies the initial 
        	end of the range of values for subsolar longitude.
        	Note that since subsolar longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subsolar_longitude will be greater than the value of the 
        	maximum_subsolar_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_azimuth attribute identifies the initial 
        	end of the range of values for subspacecraft azimuth in an image.
        	Note that since subspacecraft azimuth has values in [0,360], if 
        	the range in the image crosses the horizontal reference corresponding 
        	to zero, the value of minimum_subspacecraft_azimuth will be greater than 
        	the value of the maximum_subspacecraft_azimuth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_latitude attribute identifies the initial 
        	end of the range of values for subspacecraft latitude in an image.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_subspacecraft_longitude attribute identifies the initial 
        	end of the range of values for subspacecraft longitude.
        	Note that since subspacecraft longitude has values in [0,360], if 
        	the range in the product crosses the prime meridian, the value of 
        	minimum_subspacecraft_longitude will be greater than the value of the 
        	maximum_subspacecraft_longitude.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_geocentric_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the center of the Earth during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>minimum_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_heliocentric_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the center of the Sun during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>minimum_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>minimum_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The minimum_target_ssb_distance attribute provides 
            the smallest value for the distance between the center of the 
            target and the Solar System Barycenter during the observation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>pixel_field_of_view_method</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_field_of_view_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The pixel_field_of_view_method provides the method used
          to get the values of the horizontal/vertical_pixel_field_view attributes. If the pixel
          field of view does not vary across the camera field of view, then this value is 'constant'.
          If the pixel field of view does vary across the camera field of view, the pixel field of
          view can be determined either by the center pixel of the camera or the average field of view
          of the pixel. See the camera documentation for more details.
        </definition>
        <DD_Value_Domain>
          <enumeration_flag>true</enumeration_flag>
          <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
          <unit_of_measure_type>Units_of_None</unit_of_measure_type>
          <DD_Permissible_Value>
            <value>Constant</value>
            <value_meaning>Pixel field of view does not vary across the camera field of view</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Central Pixel</value>
            <value_meaning>Pixel field of view varies across the camera field of view and represents 
                the FOV of the central pixel of the camera</value_meaning>
          </DD_Permissible_Value>
          <DD_Permissible_Value>
            <value>Average</value>
            <value_meaning>Pixel field of view varies across the camera field of view and represents 
                the average FOV of the pixel</value_meaning>
          </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>pixel_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pixel_latitude attribute gives the value 
            of the planetocentric latitude on the target of the 
            projection of a specified pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
   
    <DD_Attribute>
        <name>pixel_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>pixel_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The pixel_longitude attribute gives the value 
            of the planetocentric longitude on the target of the 
            projection of a specified pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>reference_location</name>
        <version_id>1.0</version_id>
        <local_identifier>reference_location</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>M. Gordon</submitter_name>
        <definition>The reference_location indicates the position to which 
          values in the containing class apply. If the reference location is on 
          a target, the target is the one specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Boresight Intercept Point</value>
                <value_meaning>Values were determined for the point where the 
                               boresight vector intersects the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Subspacecraft Point</value>
                <value_meaning>Values were determined for the subspacecraft point 
                               on the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Target Center</value>
                <value_meaning>Values were determined for the center of the designated target. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
              <value>Constant</value>
              <value_meaning>Constant is used when the pixel scale does not vary, e.g., 
              	for telecentric lenses, maps, or cameras that look at constant, fixed targets, 
              	such as microscope stages.
              </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The solar_elongation element gives the angle between the 
           line of sight of observation and the direction of the Sun. 
           Note: For IRAS: The line of sight of observation is the 
           boresight of the telescope as measured by the satellite sun sensor. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_central_body_distance attribute provides the scalar distance
            between the spacecraft and the center of the central body (e.g., the center of Mars
            when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_geocentric_distance attribute provides 
                    the scalar distance between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_heliocentric_distance attribute provides the
            scalar distance between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>    

    <DD_Attribute>
        <name>spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance between the spacecraft and the boresight vector 
            intercept point on the surface of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_center_distance attribute provides 
            the scalar distance between the spacecraft and the center 
            of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance between the spacecraft and the subspacecraft point on the 
            surface of the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_emission_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the emission angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_incidence_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the incidence angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_latitude attribute identifies the value of
        	the Planetocentric latitude at the beginning of the observation 
        	(geometry_start_time_utc). When either start_latitude or stop_latitude 
        	is used, both must be used. In addition the attribute 
        	lat_long_method must be used.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_longitude attribute identifies the value of
        	the Planetocentric longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>start_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_phase_angle attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the phase angle at the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>start_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_solar_elongation attribute provides the value 
            at the beginning of the observation (geometry_start_time_utc) for 
            the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_central_body_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the central body (e.g., the center 
            of Mars when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_geocentric_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_heliocentric_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the boresight vector intercept point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_center_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the center of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance at the beginning of the observation (geometry_start_time_utc)
            between the spacecraft and the subspacecraft point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_azimuth attribute identifies the value of
        	the subsolar azimuth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_latitude attribute identifies the value of
        	the subsolar latitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subsolar_longitude attribute identifies the value of
        	the subsolar longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_azimuth attribute identifies the value of
        	the subspacecraft azimuth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_latitude attribute identifies the value of
        	the subspacecraft latitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>start_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_subspacecraft_longitude attribute identifies the value of
        	the subspacecraft longitude at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_geocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Earth at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Sun at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>start_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>start_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The start_target_ssb_distance attribute provides 
            the scalar distance between the center of the target and the 
            Solar System Barycenter at the beginning of the observation (geometry_start_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    <DD_Attribute>
        <name>stop_emission_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_emission_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_emission_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the emission angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_incidence_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_incidence_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_incidence_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the incidence angle at the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_latitude attribute identifies the value of
        	the Planetocentric latitude at the end of the observation 
        	(geometry_stop_time_utc). When either start_latitude or stop_latitude 
        	is used, both must be used. In addition the attribute 
        	lat_long_method must be used.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_longitude attribute identifies the value of
        	the Planetocentric longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_phase_angle</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_phase_angle</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_phase_angle attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the phase angle at the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_solar_elongation</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_solar_elongation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_solar_elongation attribute provides the value 
            at the end of the observation (geometry_stop_time_utc) for 
            the solar elongation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>180</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_central_body_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_central_body_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_central_body_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the central body (e.g., the center 
            of Mars when opperating in the Mars system).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_geocentric_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_heliocentric_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_boresight_intercept_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_boresight_intercept_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_boresight_intercept_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the boresight vector intercept point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_center_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_center_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_center_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the center of the target specified in the parent 
            Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_spacecraft_target_subspacecraft_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_spacecraft_target_subspacecraft_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_spacecraft_target_subspacecraft_distance attribute provides 
            the scalar distance at the end of the observation (geometry_stop_time_utc)
            between the spacecraft and the subspacecraft point on the surface of 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_azimuth attribute identifies the value of
        	the subsolar azimuth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_latitude attribute identifies the value of
        	the subsolar latitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subsolar_longitude attribute identifies the value of
        	the subsolar longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_azimuth attribute identifies the value of
        	the subspacecraft azimuth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_latitude attribute identifies the value of
        	the subspacecraft latitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_subspacecraft_longitude attribute identifies the value of
        	the subspacecraft longitude at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_geocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Earth at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of 
            the Sun at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>stop_target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The stop_target_ssb_distance attribute provides 
            the scalar distance between the center of the target and the 
            Solar System Barycenter at the end of the observation (geometry_stop_time_utc).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The subsolar_azimuth attribute provides the value of the                      
            angle between the line from the center of an image to the                    
            subsolar point on the target and a horizontal reference line (in the                       
            image plane) extending from the image center to the middle right edge of the image.                                                     
            The values of this angle increase in a clockwise direction.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subsolar_latitude attribute gives the value 
            of the planetocentric latitude at the subsolar point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subsolar_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subsolar_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subsolar_longitude attribute gives the value 
            of the planetocentric longitude at the subsolar point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subspacecraft_azimuth attribute provides the value of the                      
            angle between the line from the center of an image to the                    
            subspacecraft point on the target and a horizontal reference line (in the                       
            image plane) extending from the image center to the middle right edge of the image.                                                     
            The values of this angle increase in a clockwise direction.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_latitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_latitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The subspacecraft_latitude attribute gives the value 
            of the planetocentric latitude at the subspacecraft point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90</minimum_value>
            <maximum_value>90</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>subspacecraft_longitude</name>
        <version_id>1.0</version_id>
        <local_identifier>subspacecraft_longitude</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The subspacecraft_longitude attribute gives the value 
            of the planetocentric longitude at the subspacecraft point on the target.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_geocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_geocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_geocentric_distance attribute provides the scalar distance
            between the center of the target and the center of the Earth.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_heliocentric_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_heliocentric_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_heliocentric_distance attribute provides 
            the scalar distance between the center of the target and the center of the Sun.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>target_ssb_distance</name>
        <version_id>1.0</version_id>
        <local_identifier>target_ssb_distance</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The target_ssb_distance attribute provides the scalar distance between
            the center of the target and the Solar System Barycenter.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>vertical_pixel_field_of_view</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_pixel_field_of_view</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The vertical_pixel_field_of_view provides the angular measure of  
      the vertical field of view of a single pixel, and is sometimes referred to as 
      the instantaneous field of view. The pixel_field_of_view_method attribute will 
      designate the method used to determine this value. If the pixel_field_of_view_method 
      attribute is not specified, see the camera documentation for more details. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0</minimum_value>
            <maximum_value>360</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>vertical_pixel_footprint</name>
        <version_id>1.0</version_id>
        <local_identifier>vertical_pixel_footprint</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The vertical_pixel_footprint provides the size of                       
            the vertical field of view of a single pixel projected onto 
            the target specified in the parent Geometry_Orbiter class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Length</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <!-- Classes -->
    
    <!-- Nesting Level 1 -->
    
<!--      If any of the contained classes or attributes used in the label have central body, 
          and or target in the attribute or class name (e.g., spacecraft_to_central_body_distance, 
          Vector_Planetocentric_Position_Spacecraft_To_Target), then the central body and or target must
          be identified in this class. 
          
          If more than one target or central body need to be identified to fully describe the data,
          use multiple instances of the Geometry_Orbiter class.
          
          Only use coordinate system at this level if only one coordinate system is used in the label.
          Otherwise, specify coordinate system in each of the subordinate classes where it is appropriate. 
    -->

    <DD_Class>
        <name>Geometry_Orbiter</name>
        <version_id>1.0</version_id>
        <local_identifier>Geometry_Orbiter</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Geometry_Orbiter class is a container for geometric information 
          (positions, velocities, orientations, etc.) relevant to orbiter or flyby 
          spacecraft observations. 
          
          If any of the contained classes or attributes have central body, 
          and or target in the class or attribute name
          (e.g., spacecraft_to_central_body_distance,
          Vector_Planetocentric_Position_Spacecraft_To_Target), then the
          central body and or target must be identified in this class. 
          
          If more than one geometry_reference_time_utc, target or central body need 
          to be identified to fully describe the data, use multiple instances of 
          the Geometry_Orbiter class.
          
          Do not use Coordinate_System at this level if more than one coordinate 
          system is used in the contained classes. If more than one coordinate system
          is used, specify Coordinate_System in each of the subordinate classes
          where it is appropriate. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>geometry_reference_time_utc</identifier_reference>
            <identifier_reference>geometry_start_time_utc</identifier_reference>
            <identifier_reference>geometry_stop_time_utc</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>3</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>geometry_reference_time_tdb</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Orbiter_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Pixel_Dimensions</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Distances</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 2 -->
    
    <DD_Class>
        <name>Distances</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances class is a container of distance classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distances_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Distance_Generic</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
         </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Illumination_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Geometry class is a container for 
        	illumination geometry classes.</definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Illumination_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Orbiter_Identification</name>
        <version_id>1.0</version_id>
        <local_identifier>Orbiter_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Orbiter_Identification class is a container of classes 
        	used to establish global identifications for the Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Central_Body_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Pixel_Dimensions</name>
        <version_id>2.0</version_id>
        <local_identifier>Pixel_Dimensions</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Dimensions class contains information regarding pixel size.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pixel_field_of_view_method</identifier_reference>
          <reference_type>attribute_of</reference_type>
          <minimum_occurrences>1</minimum_occurrences>
          <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>horizontal_pixel_field_of_view</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_pixel_field_of_view</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Pixel_Size_Projected</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Surface_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Surface_Geometry class is a container for surface geometry classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Min_Max</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Surface_Geometry_Start_Stop</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vectors</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors class is a container of vector classes.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors_Cartesian_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Vectors_Planetocentric_Specific</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Generic_Vectors</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 3 -->

    <DD_Class>
        <name>Coordinate_System_Identification</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_System_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Coordinate_System_Identification class fully describes a
        coordinate system. This class is typically used for orbiter/flyby geometry 
        while the Coordinate_Space construction is used for lander/rover geometry. 
        Coordinate_System_Identification provides the reference frame, coordinate 
        system type (cartesian, planetocentric, etc.), origin, and the instantiation 
        time of the system when appropriate. The instantiation time (coordinate_system_time_utc)
        is used when a rotating frame has been 'frozen' at a particular epoch. Instantiation
        time is not needed for inertial or rotating frames.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>coordinate_system_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>coordinate_system_time_utc</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Origin_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
 
    <DD_Class>
        <name>Distance_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Distance_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The distance between the two objects, both of which must be specified.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Distances_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Min_Max</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Min_Max class is a container class for 
        	named distances given as minimum-maximum pairs. For distance, if
        	either the minimum or maximum parameter is given, both must be provided.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Distances_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Specific class is a container class for 
        	specific distances defined in this dictionary.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>spacecraft_geocentric_distance</identifier_reference>
            <identifier_reference>spacecraft_heliocentric_distance</identifier_reference>
            <identifier_reference>spacecraft_central_body_distance</identifier_reference>
            <identifier_reference>spacecraft_target_center_distance</identifier_reference>
            <identifier_reference>spacecraft_target_boresight_intercept_distance</identifier_reference>
            <identifier_reference>spacecraft_target_subspacecraft_distance</identifier_reference>
            <identifier_reference>target_geocentric_distance</identifier_reference>
            <identifier_reference>target_heliocentric_distance</identifier_reference>
            <identifier_reference>target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Distances_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Distances_Start_Stop</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Distances_Start_Stop class is a container class for 
        	named distances given as pairs corresponding to the beginning and 
        	end of the observation. For a distance, if either the start or 
        	stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>start_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_central_body_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_center_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_boresight_intercept_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_spacecraft_target_subspacecraft_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_geocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_heliocentric_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_target_ssb_distance</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>  
    
    <DD_Class>
        <name>Footprint_Vertices</name>
        <version_id>2.0</version_id>
        <local_identifier>Footprint_Vertices</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Footprint_Vertices class provides a set 
            of latitude and longitude pairs which are the vertices
            of a polygon representing the projected footprint of the 
            field of view on the target surface (or on a map).
            Note this is intended for products such as maps, 
            or where the target fills the field of view. The vertices should 
            be listed either in clockwise or counterclockwise order.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Pixel_Intercept</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>2</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Generic_Vectors</name>
        <version_id>1.0</version_id>
        <local_identifier>Generic_Vectors</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Generic_Vectors class is a container class for all 
            of the build your own vector templates.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.comment</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
         <DD_Association>
             <identifier_reference>XSChoice#</identifier_reference>
             <identifier_reference>Vector_Cartesian_Position_Generic</identifier_reference>
             <identifier_reference>Vector_Cartesian_Velocity_Generic</identifier_reference>
             <identifier_reference>Vector_Cartesian_Acceleration_Generic</identifier_reference>
             <identifier_reference>Vector_Planetocentric_Position_Generic</identifier_reference>
             <identifier_reference>Vector_Planetocentric_Velocity_Generic</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Illumination_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Min_Max</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Min_Max class contains attributes 
          providing illumination parameters as minimum/maximum pairs. 
          For any given illumination parameter if one of minimum or 
          maximum is given, both must be given.
          If a target is specified using the Geometry_Target_Identification class in the 
          Orbiter_Identification class under the same parent Geometry_Orbiter class,
          the min-max pairs for each illumination parameter provide the range of that 
          parameter in the observation on that target. Otherwise the pair provides the 
          range for the entire field of view.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
 
    <DD_Class>
        <name>Illumination_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Specific class contains attributes 
           providing illumination parameters at a single location in 
           the field of view. That location is specified by using one,
           and only one of reference_location, reference_pixel_location,
           or Reference_Pixel, If reference_location is used, and indicates 
           a point on a target, the target must be the one specified using 
           Geometry_Target_Identification in the parent Geometry_Orbiter class. 
           The provided value for each illumination attribute must correspond 
           to the time given by geometry_reference_time_utc.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>reference_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>reference_pixel_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Pixel</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>emission_angle</identifier_reference>
            <identifier_reference>incidence_angle</identifier_reference>
            <identifier_reference>phase_angle</identifier_reference>
            <identifier_reference>solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>4</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Illumination_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Illumination_Start_Stop</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Illumination_Start_Stop class contains attributes 
          providing illumination parameters as pairs  corresponding to 
          the beginning and end of the observation. If either the start or 
        	stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class. 
          If a target is specified using the Geometry_Target_Identification class 
          in the Orbiter_Identification class under the parent Geometry_Orbiter 
          class, the start-stop pairs for each illumination parameter provide 
          the range of that parameter in the observation on that target. Otherwise 
          the pair provides the range for the entire field of view.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>start_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_emission_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_incidence_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_phase_angle</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_solar_elongation</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Pixel_Intercept</name>
        <version_id>1.0</version_id>
        <local_identifier>Pixel_Intercept</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Intercept class provides the latitude and 
            longitude on the surface of the target for the projection 
            of the specified pixel. The pixel is specified using either 
            reference_pixel_location or Reference_Pixel. Although each of 
            these is optional, one must be used.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>reference_pixel_location</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Reference_Pixel</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pixel_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pixel_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Pixel_Size_Projected</name>
        <version_id>2.0</version_id>
        <local_identifier>Pixel_Size_Projected</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Pixel_Size_Projected class gives the size, 
            in units of length (e.g., kilometers) of the projection 
            of a pixel onto the surface of the target which is specified 
            in the parent Geometry_Orbiter class. The reference_location 
            attribute is used to identify the specific point on the target.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>reference_location</identifier_reference>
            <identifier_reference>distance</identifier_reference>
           <reference_type>attribute_of</reference_type>
           <minimum_occurrences>1</minimum_occurrences>
           <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
         <DD_Association>
             <identifier_reference>horizontal_pixel_footprint</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>vertical_pixel_footprint</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>        
    </DD_Class>
    
    <DD_Class>
        <name>Surface_Geometry_Min_Max</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Min_Max</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Min_Max class contains attributes 
          providing surface geometry parameters as minimum/maximum pairs. 
          For any given parameter if one of minimum or maximum is given, 
          both must be given.
          The min-max pairs for each parameter provide the range of that 
          parameter in the observation for the target specified using 
          the Geometry_Target_Identification class in the Orbiter_Identification 
          class under the parent Geometry_Orbiter class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>minimum_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>minimum_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>maximum_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Surface_Geometry_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Specific</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Specific class contains classes and attributes 
            for various points on the surface of the target designated in the 
            enclosing Geometry_Orbiter.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Pixel_Intercept</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Footprint_Vertices</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Surface_Geometry_Start_Stop</name>
        <version_id>1.0</version_id>
        <local_identifier>Surface_Geometry_Start_Stop</local_identifier>
        <submitter_name>Edward A. Guinness</submitter_name>
        <definition>The Surface_Geometry_Start_Stop class contains attributes 
          providing surface geometry parameters given as pairs corresponding to 
          the beginning and end of the observation. For a parameter, if either 
          the start or stop parameter is given, both must be provided. 
        	If any values from this class are included in the label, the 
        	parameters geometry_start_time_utc and geometry_stop_time_utc must be 
        	given in the enclosing Geometry_Orbiter class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>lat_long_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subsolar_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_latitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>start_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>stop_subspacecraft_longitude</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vectors_Cartesian_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors_Cartesian_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors_Cartesian_Specific class is a 
            container class for all cartesian vectors 
            with pre-identified endpoints.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Central_Body_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Central_Body_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Spacecraft_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_SSB_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Sun_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Position_Earth_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Earth</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_SSB</identifier_reference>
            <identifier_reference>Vector_Cartesian_Velocity_Target_Relative_To_Sun</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vectors_Planetocentric_Specific</name>
        <version_id>1.0</version_id>
        <local_identifier>Vectors_Planetocentric_Specific</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vectors_Planetocentric_Specific class is a 
            container class for all planetocentric vectors 
            with pre-identified endpoints.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Central_Body_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Position_Spacecraft_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</identifier_reference>
            <identifier_reference>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 4 -->
    
    <DD_Class>
        <name>Coordinate_System_Origin_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Coordinate_System_Origin_Identification</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Coordinate_System_Origin_Identification class uniquely identifies
          the "body" that is the origin of a coordinate system. Typically body centered 
          coordinate systems place the origin at the center of mass of the body. In addition 
          to physical bodies, the origin may be defined at a point in space such as a system 
          barycenter. Note that the origin of coordinate system does not necessarily correspond 
          to either end point of a vector.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Acceleration_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Acceleration_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Acceleration_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of linear acceleration. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used                      
            here if the coordinate system has not been specified in the enclosing class.                                                                       
        </definition>                       
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Acceleration_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Central_Body_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Central_Body_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Central_Body_To_Spacecraft 
            is a linear, rectangular coordinates vector from the center 
            of mass of the central body (e.g., planet) to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Central_Body_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Central_Body_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Central_Body_To_Target 
            is a linear, rectangular coordinates vector from the center 
            of mass of the central body (e.g., planet) to the target specified 
            in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Central_Body 
            is a linear, rectangular coordinates vector from the Earth 
            to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Spacecraft 
            is a linear, rectangular coordinates vector from the Earth 
            to the spacecraft.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Earth_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Earth_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Earth_To_Target 
            is a linear, rectangular coordinates vector from the Earth 
            to the target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Position_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of length. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
         </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Spacecraft_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Spacecraft_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Spacecraft_To_Target 
            is a linear, rectangular coordinates vector from the spacecraft
            to the target specified in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Central_Body
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Spacecraft
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>            
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_SSB_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_SSB_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_SSB_To_Target
            is a linear, rectangular coordinates vector from the Solar
            System Barycenter to the target specified in the parent 
            Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Central_Body 
            is a linear, rectangular coordinates vector from the Sun 
            to the central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Spacecraft 
            is a linear, rectangular coordinates vector from the Sun 
            to the spacecraft.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Position_Sun_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Sun_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Sun_To_Target 
            is a linear, rectangular coordinates vector from the Sun 
            to the target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Vector_Cartesian_Velocity_Generic is a three dimensional,  
            rectangular coordinates vector. Uses units of linear velocity. 
            Includes attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.                    
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Central_Body 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the  
            central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Earth 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to Earth. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_SSB 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the 
            Solar System Barycenter. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun</local_identifier>
        <submitter_name>Anne Raugh</submitter_name>
        <definition>
            Vector_Cartesian_Velocity_Spacecraft_Relative_To_Sun is a 
            velocity vector in rectangular coordinates that gives the
            velocity of the spacecraft with respect to the center of 
            the Sun.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Spacecraft_Relative_To_Target 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the spacecraft with respect to the 
            target specified in the parent Geometry_Orbiter class.         
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Central_Body 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to the  
            central body (e.g., planet). 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Earth</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Earth</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Earth 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to Earth. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_Spacecraft 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect to the  
            spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_SSB</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_SSB</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Target_Relative_To_SSB 
            is a velocity vector in rectangular coordinates that
            gives the velocity of the designated target with respect  
            to the Solar System Barycenter. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

     <DD_Class>
        <name>Vector_Cartesian_Velocity_Target_Relative_To_Sun</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Target_Relative_To_Sun</local_identifier>
        <submitter_name>Anne Raugh</submitter_name>
        <definition>
            Vector_Cartesian_Velocity_Target_Relative_To_Sun is a 
            velocity vector in rectangular coordinates that gives the
            velocity of the designated target with respect to the center
            of the sun.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
         <element_flag>false</element_flag>
         <DD_Association>
             <identifier_reference>Vector_Cartesian_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Central_Body_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Central_Body_To_Spacecraft
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the center of mass of the central body (e.g., 
            planet) to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Central_Body_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Central_Body_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Central_Body_To_Target 
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the center of mass of the central body (e.g., 
            planet) to the target specified in the parent Geometry_Orbiter class. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Planetocentric_Position_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Generic is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear units for the radius dimension, and
            angular units for the other two dimensions. Includes attributes to 
            identify the endpoints of the vector. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Position_Spacecraft_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Spacecraft_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Spacecraft_To_Target 
            is a spherical position vector in Planetocentric coordinates.  
            It extends from the spacecraft to the target specified in the parent 
            Geometry_Orbiter class.       
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Generic</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Generic</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Generic is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear velocity units for the radius dimension, 
            and angular velocity units for the other two dimensions. Includes  
            attributes to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Observer_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Geometry_Target_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Spacecraft_Relative_To_Target 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the spacecraft with respect to the designated 
            target. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Target_Relative_To_Central_Body 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the target with respect to the central body. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
  
    <DD_Class>
        <name>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Target_Relative_To_Spacecraft 
            is a spherical velocity vector in Planetocentric coordinates that 
            gives the velocity of the target with respect to the spacecraft. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.            
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Extended_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <!-- Nesting Level 5 -->
    
    <DD_Class>
        <name>Observer_Identification</name>
        <version_id>2.0</version_id>
        <local_identifier>Observer_Identification</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Within the Geometry dictionary context, an "Observer" is the body on
            the "from" end of a vector, or other translation through space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Body_Identification_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>

    <!-- Nesting Level 6 -->
    
    <DD_Class> <!-- ABSTRACT [T] Vector Cartesian_Acceleration_Extended_Base -->
        <name>Vector_Cartesian_Acceleration_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Acceleration_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Acceleration_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear acceleration.    
            The included attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Acceleration_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!-- ABSTRACT [T] Vector_Cartesian_Position_Extended_Base -->
        <name>Vector_Cartesian_Position_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Position_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Position_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of length. The included attributes are
            not sufficient to identify the endpoints of the vector. 
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!-- ABSTRACT [T] Vector_Cartesian_Velocity_Extended_Base -->
        <name>Vector_Cartesian_Velocity_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Velocity_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Cartesian_Velocity_Extended_Base is a three dimensional,  
            rectangular coordinates vector. Uses units of linear velocity.    
            The included attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Velocity_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!-- ABSTRACT [T] Vector_Planetocentric_Position_Extended_Base -->
        <name>Vector_Planetocentric_Position_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Position_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Position_Extended_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear units for the radius dimension, and
            angular units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!-- ABSTRACT [T] Vector_Planetocentric_Velocity_Extended_Base -->
        <name>Vector_Planetocentric_Velocity_Extended_Base</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Planetocentric_Velocity_Extended_Base</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The Vector_Planetocentric_Velocity_Extended_Base is a three dimensional
            spherical vector (radius, longitude, latitude) with the angular 
            coordinates defined to be consistent with the Planetocentric 
            coordinate system. Uses linear velocity units for the radius dimension, 
            and angular velocity units for the other two dimensions. The included 
            attributes are not sufficient to identify the endpoints of the vector.
            While the class Coordinate_System_Identification is optional, it must be used 
            here if the coordinate system has not been specified in the enclosing class.
        </definition>
        <abstract_flag>true</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>light_time_correction_applied</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_System_Identification</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Planetocentric_Velocity_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Schematron Rules -->

    <DD_Rule>
        <local_identifier>Illumination_Specific_0</local_identifier>
        <rule_context>//geom:Illumination_Geometry/geom:Illumination_Specific</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:reference_location) and not (geom:reference_pixel_location) and not (geom:Reference_Pixel))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:reference_location, geom:reference_pixel_location, geom:Reference_Pixel.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Central_Body_Identification_0</local_identifier>
        <rule_context>//geom:Central_Body_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Coordinate_System_Origin_Identification_0</local_identifier>
        <rule_context>//geom:Coordinate_System_Origin_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Observer_Identification_0</local_identifier>
        <rule_context>//geom:Observer_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Geometry_Target_Identification_0</local_identifier>
        <rule_context>//geom:Geometry_Target_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:body_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:body_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Reference_Frame_Identification_0</local_identifier>
        <rule_context>//geom:Reference_Frame_Identification</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:frame_spice_name) and not (geom:name) and not (pds:Internal_Reference))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:frame_spice_name, geom:name, pds:Internal_Reference.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>
    
    <DD_Rule>
        <local_identifier>Pixel_Intercept_0</local_identifier>
        <rule_context>geom:Pixel_Intercept</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if (not(geom:reference_pixel_location) and not (geom:Reference_Pixel))  then false() else true()</rule_test>
            <rule_message>At least one of the following must be present: geom:reference_pixel_location, geom:Reference_Pixel.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Geometry_Orbiter_0</local_identifier>
        <rule_context>geom:Geometry_Orbiter</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:geometry_start_time_utc) and not (geom:geometry_stop_time_utc))  then false() else true()</rule_test>
            <rule_message>geom:geometry_start_time_utc and geom:geometry_stop_time_utc, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:geometry_stop_time_utc) and not (geom:geometry_start_time_utc))  then false() else true()</rule_test>
            <rule_message>geom:geometry_start_time_utc and geom:geometry_stop_time_utc, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

<!--  Min-Max & Start-Stop pair rules  -->

    <DD_Rule>
        <local_identifier>Illumination_1</local_identifier>
        <rule_context>geom:Illumination_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_emission_angle) and not (geom:maximum_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_emission_angle and geom:maximum_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_emission_angle) and not (geom:minimum_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_emission_angle and geom:maximum_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_incidence_angle) and not (geom:maximum_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_incidence_angle and geom:maximum_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_incidence_angle) and not (geom:minimum_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_incidence_angle and geom:maximum_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_phase_angle) and not (geom:maximum_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_phase_angle and geom:maximum_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_phase_angle) and not (geom:minimum_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:minimum_phase_angle and geom:maximum_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_solar_elongation) and not (geom:maximum_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:minimum_solar_elongation and geom:maximum_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_solar_elongation) and not (geom:minimum_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:minimum_solar_elongation and geom:maximum_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>
    
    <DD_Rule>
        <local_identifier>Illumination_2</local_identifier>
        <rule_context>geom:Illumination_Start_Stop</rule_context>    
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Illumination_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_emission_angle) and not (geom:stop_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_emission_angle and geom:stop_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_emission_angle) and not (geom:start_emission_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_emission_angle and geom:stop_emission_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_incidence_angle) and not (geom:stop_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_incidence_angle and geom:stop_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_incidence_angle) and not (geom:start_incidence_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_incidence_angle and geom:stop_incidence_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_phase_angle) and not (geom:stop_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_phase_angle and geom:stop_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_phase_angle) and not (geom:start_phase_angle))  then false() else true()</rule_test>
            <rule_message>geom:start_phase_angle and geom:stop_phase_angle, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_solar_elongation) and not (geom:stop_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:start_solar_elongation and geom:stop_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_solar_elongation) and not (geom:start_solar_elongation))  then false() else true()</rule_test>
            <rule_message>geom:start_solar_elongation and geom:stop_solar_elongation, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Surface_Geom_1</local_identifier>
        <rule_context>geom:Surface_Geometry_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_latitude) and not (geom:maximum_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_latitude and geom:maximum_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_latitude) and not (geom:minimum_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_latitude and geom:maximum_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_longitude) and not (geom:maximum_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_longitude and geom:maximum_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_longitude) and not (geom:minimum_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_longitude and geom:maximum_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_azimuth) and not (geom:maximum_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_azimuth and geom:maximum_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_azimuth) and not (geom:minimum_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_azimuth and geom:maximum_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_latitude) and not (geom:maximum_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_latitude and geom:maximum_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_latitude) and not (geom:minimum_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_latitude and geom:maximum_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subsolar_longitude) and not (geom:maximum_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_longitude and geom:maximum_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subsolar_longitude) and not (geom:minimum_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subsolar_longitude and geom:maximum_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_azimuth) and not (geom:maximum_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_azimuth and geom:maximum_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_azimuth) and not (geom:minimum_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_azimuth and geom:maximum_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_latitude) and not (geom:maximum_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_latitude and geom:maximum_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_latitude) and not (geom:minimum_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_latitude and geom:maximum_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_subspacecraft_longitude) and not (geom:maximum_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_longitude and geom:maximum_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_subspacecraft_longitude) and not (geom:minimum_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:minimum_subspacecraft_longitude and geom:maximum_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Surface_Geom_2</local_identifier>
        <rule_context>geom:Surface_Geometry_Start_Stop</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_latitude) and not (geom:lat_long_method))  then false() else true()</rule_test>
            <rule_message>If you give geom:start_latitude and geom:stop_latitude, then a value for lat_long_method must be given.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Surface_Geometry_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_latitude) and not (geom:stop_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_latitude and geom:stop_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_latitude) and not (geom:start_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_latitude and geom:stop_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_longitude) and not (geom:stop_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_longitude and geom:stop_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_longitude) and not (geom:start_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_longitude and geom:stop_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_azimuth) and not (geom:stop_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_azimuth and geom:stop_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_azimuth) and not (geom:start_subsolar_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_azimuth and geom:stop_subsolar_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_latitude) and not (geom:stop_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_latitude and geom:stop_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_latitude) and not (geom:start_subsolar_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_latitude and geom:stop_subsolar_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subsolar_longitude) and not (geom:stop_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_longitude and geom:stop_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subsolar_longitude) and not (geom:start_subsolar_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subsolar_longitude and geom:stop_subsolar_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_azimuth) and not (geom:stop_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_azimuth and geom:stop_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_azimuth) and not (geom:start_subspacecraft_azimuth))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_azimuth and geom:stop_subspacecraft_azimuth, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_latitude) and not (geom:stop_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_latitude and geom:stop_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_latitude) and not (geom:start_subspacecraft_latitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_latitude and geom:stop_subspacecraft_latitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_subspacecraft_longitude) and not (geom:stop_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_longitude and geom:stop_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_subspacecraft_longitude) and not (geom:start_subspacecraft_longitude))  then false() else true()</rule_test>
            <rule_message>geom:start_subspacecraft_longitude and geom:stop_subspacecraft_longitude, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Distances_1</local_identifier>
        <rule_context>geom:Distances_Min_Max</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_geocentric_distance) and not (geom:maximum_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_geocentric_distance and geom:maximum_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_geocentric_distance) and not (geom:minimum_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_geocentric_distance and geom:maximum_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_heliocentric_distance) and not (geom:maximum_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_heliocentric_distance and geom:maximum_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_heliocentric_distance) and not (geom:minimum_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_heliocentric_distance and geom:maximum_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_central_body_distance) and not (geom:maximum_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_central_body_distance and geom:maximum_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_central_body_distance) and not (geom:minimum_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_central_body_distance and geom:maximum_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_center_distance) and not (geom:maximum_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_center_distance and geom:maximum_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_center_distance) and not (geom:minimum_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_center_distance and geom:maximum_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_boresight_intercept_distance) and not (geom:maximum_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_boresight_intercept_distance and geom:maximum_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_boresight_intercept_distance) and not (geom:minimum_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_boresight_intercept_distance and geom:maximum_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_spacecraft_target_subspacecraft_distance) and not (geom:maximum_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_subspacecraft_distance and geom:maximum_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_spacecraft_target_subspacecraft_distance) and not (geom:minimum_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_spacecraft_target_subspacecraft_distance and geom:maximum_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_geocentric_distance) and not (geom:maximum_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_geocentric_distance and geom:maximum_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_geocentric_distance) and not (geom:minimum_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_geocentric_distance and geom:maximum_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_heliocentric_distance) and not (geom:maximum_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_heliocentric_distance and geom:maximum_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_heliocentric_distance) and not (geom:minimum_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_heliocentric_distance and geom:maximum_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:minimum_target_ssb_distance) and not (geom:maximum_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_ssb_distance and geom:maximum_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:maximum_target_ssb_distance) and not (geom:minimum_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:minimum_target_ssb_distance and geom:maximum_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

    <DD_Rule>
        <local_identifier>Distances_2</local_identifier>
        <rule_context>geom:Distances_Start_Stop</rule_context>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>ancestor::geom:Geometry_Orbiter/geom:geometry_start_time_utc and ancestor::geom:Geometry_Orbiter/geom:geometry_stop_time_utc</rule_test>
            <rule_message>geom:If you use the Distances_Start_Stop class, you must give values for Geometry_Orbiter/geometry_start_time_utc and Geometry_Orbiter/geometry_stop_time_utc.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_geocentric_distance) and not (geom:stop_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_geocentric_distance and geom:stop_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_geocentric_distance) and not (geom:start_spacecraft_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_geocentric_distance and geom:stop_spacecraft_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_heliocentric_distance) and not (geom:stop_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_heliocentric_distance and geom:stop_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_heliocentric_distance) and not (geom:start_spacecraft_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_heliocentric_distance and geom:stop_spacecraft_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_central_body_distance) and not (geom:stop_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_central_body_distance and geom:stop_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_central_body_distance) and not (geom:start_spacecraft_central_body_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_central_body_distance and geom:stop_spacecraft_central_body_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_center_distance) and not (geom:stop_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_center_distance and geom:stop_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_center_distance) and not (geom:start_spacecraft_target_center_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_center_distance and geom:stop_spacecraft_target_center_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_boresight_intercept_distance) and not (geom:stop_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_boresight_intercept_distance and geom:stop_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_boresight_intercept_distance) and not (geom:start_spacecraft_target_boresight_intercept_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_boresight_intercept_distance and geom:stop_spacecraft_target_boresight_intercept_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_spacecraft_target_subspacecraft_distance) and not (geom:stop_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_subspacecraft_distance and geom:stop_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_spacecraft_target_subspacecraft_distance) and not (geom:start_spacecraft_target_subspacecraft_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_spacecraft_target_subspacecraft_distance and geom:stop_spacecraft_target_subspacecraft_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_geocentric_distance) and not (geom:stop_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_geocentric_distance and geom:stop_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_geocentric_distance) and not (geom:start_target_geocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_geocentric_distance and geom:stop_target_geocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_heliocentric_distance) and not (geom:stop_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_heliocentric_distance and geom:stop_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_heliocentric_distance) and not (geom:start_target_heliocentric_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_heliocentric_distance and geom:stop_target_heliocentric_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_target_ssb_distance) and not (geom:stop_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_ssb_distance and geom:stop_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_target_ssb_distance) and not (geom:start_target_ssb_distance))  then false() else true()</rule_test>
            <rule_message>geom:start_target_ssb_distance and geom:stop_target_ssb_distance, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:start_time) and not (geom:stop_time))  then false() else true()</rule_test>
            <rule_message>geom:start_time and geom:stop_time, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
        <DD_Rule_Statement>
            <rule_type>Assert</rule_type>
            <rule_test>if ((geom:stop_time) and not (geom:start_time))  then false() else true()</rule_test>
            <rule_message>geom:start_time and geom:stop_time, are a pair; if you use one, you must use both.</rule_message>
        </DD_Rule_Statement>
    </DD_Rule>

</Ingest_LDD> 
