<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1G00.sch"?>

<Ingest_LDD 
    xmlns="http://pds.nasa.gov/pds4/pds/v1"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pds.nasa.gov/pds4/pds/v1 
    https://pds.nasa.gov/pds4/pds/v1/PDS4_PDS_1G00.xsd">
    
    <name>Geometry Dictionary Full</name>
    <ldd_version_id>1.8.0.0</ldd_version_id>
    <dictionary_type>Discipline</dictionary_type>
    <full_name>Edward A. Guinness</full_name>
    <steward_id>geo</steward_id>
    <namespace_id>geom</namespace_id>
    <comment>Cumulative comments removed to reduce annoyance...
        
        GeomLander - Geometry Lander Section
        
        The Geometry namespace is divided into four major sections:
        Main         This section
        ImageDisplay Geometry mapped to a (properly) displayed image
        Orbit        Orbiter and flyby classes
        Lander       Lander and Rover classes
        
        The Lander section of the Geometry namespace definition contains the definitions
        of classes and attributes unique to the Geometry_Lander major subclass hierarchy.
        It references common elements defined in the Main section.
        
        The Lander section deals with details of imaging and hardware positioning that 
        are unique to landers and rovers operating on the surface of something other
        than Earth.
        
        Attributes are in alphanetical order. Classes are listed in alphabetical order
        within subcategories based on how deeply they are nested.
    </comment>
    
    <last_modification_date_time>2021-08-20</last_modification_date_time>
    
    <!-- Attributes -->
    
    <DD_Attribute>
        <name>attitude_propagation_counter</name>
        <version_id>1.0</version_id>
        <local_identifier>attitude_propagation_counter</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Dean</submitter_name>
        <definition>Count in clock units of how long it has been since the last IMU reset,
            which relates to how good the attitude measurement is due to IMU drift.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Integer</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>attitude_propagation_duration</name>
        <version_id>1.0</version_id>
        <local_identifier>attitude_propagation_duration</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Dean</submitter_name>
        <definition>The number of seconds for how long it has been since the last IMU reset,
            which relates to how good the attitude measurement is due to IMU drift.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Time</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>c0</name>
        <version_id>1.0</version_id>
        <local_identifier>c0</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The first coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>c1</name>
        <version_id>1.0</version_id>
        <local_identifier>c1</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The second coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>

    <DD_Attribute>
        <name>c2</name>
        <version_id>1.0</version_id>
        <local_identifier>c2</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The third coefficient of a polynomial.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>cahvore_model_type</name>
        <version_id>1.0</version_id>
        <local_identifier>cahvore_model_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The cahvore_model_type attribute indicates which variant of the CAHVORE model to
            use. Type 1 is a perspective-projection model, similar to CAHV and CAHVOR except for the
            moving entrance pupil. Type 2 is a fish-eye lens model reflecting fundamentally
            different geometry. Type 3 is a generalization that includes the first two, and is used for most
            fisheye-type lenses (see cahvore_model_parameter).
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Integer</value_data_type>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
            <DD_Permissible_Value>
                <value>1</value>
                <value_meaning>A perspective-projection model, similar to CAHV and
                    CAHVOR except for the moving entrance pupil</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>2</value>
                <value_meaning>A fish-eye lens model reflecting fundamentally different geometry</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>3</value>
                <value_meaning>A generalization that includes the first two, and is used for most
                    fisheye-type lenses</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>cahvore_model_parameter</name>
        <version_id>1.0</version_id>
        <local_identifier>cahvore_model_parameter</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The cahvore_parameter_type attribute is a scalar floating-point number used for
            CAHVORE Type 3 models (see cahvore_model_type). If the parameter is 1.0, the model is
            identical to type 1; if 0.0, it is identical to type 2. Most fish-eye lenses use a value
            in between.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>calibration_source_id</name>
        <version_id>1.0</version_id>
        <local_identifier>calibration_source_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The calibration_source_id is used to identify the source used
            in calibrating the instrument. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>command_type</name>
        <version_id>1.0</version_id>
        <local_identifier>command_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Specifies how the device was commanded.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Angle_Absolute</value>
                <value_meaning>
                    Specifies an absolute pointing direction for the device. 
                    This is distinct from Joint_Absolute in that the angle is measured in a 
                    coordinate frame rather than direct joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Angle_Relative</value>
                <value_meaning>
                    Specifies a pointing direction change relative to the prior
                    pointing. This is distinct from Joint_Relative in that the angle is 
                    measured in a coordinate frame rather than direct joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Joint_Absolute</value>
                <value_meaning>
                    Specifies absolute joint angles.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Joint_Relative</value>
                <value_meaning>
                    Specifies joint angles as a delta relative to the prior pointing.. 
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>XYZ</value>
                <value_meaning>
                    Specifies a pointing target as an XYZ coordinate in a given coordinate frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>No_Motion</value>
                <value_meaning>
                    Specifies no motion from the previous observation.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>No_Motion_No_Arb</value>
                <value_meaning>
                    Specifies no motion from the previous observation, but also does not 
                    reserve the resource (thus no arbitration).
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>None</value>
                <value_meaning>
                    Unspecified commanding.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>device_id</name>
        <version_id>1.0</version_id>
        <local_identifier>device_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_id attribute specifies the abbreviated 
            identification of an articulation device.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>device_mode</name>
        <version_id>1.0</version_id>
        <local_identifier>device_mode</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_mode attribute specifies the deployment state
            (i.e., physical configuration) of an articulation device at the time of data
            acquisition. Examples include 'Arm Vibe', 'Deployed', 'Free Space', 'Stowed'.
            Note: the value set for this attribute is mission-specific and should be declared
            in a mission-specific dictionary.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>device_name</name>
        <version_id>1.0</version_id>
        <local_identifier>device_name</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The device_name attribute specifies the common 
            name of an articulation device.  
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>device_phase</name>
        <version_id>1.0</version_id>
        <local_identifier>device_phase</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The device_phase attribute specifies the current phase of the mission, 
            from an articulation-device-centric point of view.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>instrument_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>instrument_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The instrument_azimuth attribute specifies the value for an instrument's
            rotation in the horizontal direction. It may be measured from a low hard stop,
            or relative to a coordinate frame. Although it may be used for any instrument
            where it makes sense, it is primarily intended for use in surface-based instruments
            that measure pointing in terms of azimuth and elevation. If this value is expressed
            using a coordinate system, the coordinate system is specified by the
            Coordinate_Space_Reference class. The interpretation of exactly what part of
            the instrument is being pointed is mission-specific. It could be the boresight,
            the camera head direction, the CAHV camera model A vector direction, or any of a
            number of other things. As such, for multimission use this value should be used
            mostly as an approximation, e.g. identifying scenes which might contain a given object.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>instrument_elevation</name>
        <version_id>1.0</version_id>
        <local_identifier>instrument_elevation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The instrument_elevation attribute specifies the value for an instrument's
            rotation in the vertical direction. It may be usually measured from a low hard stop,
            or relative to a coordinate frame. Although it may be used for any instrument
            where it makes sense, it is primarily intended for use in surface-based instruments
            that measure pointing in terms of azimuth and elevation. If this value is expressed
            using a coordinate system, the coordinate system is specified by the
            Coordinate_Space_Reference class. The interpretation of exactly what part of
            the instrument is being pointed is mission-specific. It could be the boresight,
            the camera head direction, the CAHV camera model A vector direction, or any of a
            number of other things. As such, for multimission use this value should be used
            mostly as an approximation, e.g. identifying scenes that might contain a given object.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_algorithm</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_algorithm</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_algorithm defines how interpolation was performed. For example,
            "Piecewise Bilinear" does a piecewise bilinear interpolation between calibration models
            nearest to the interpolation_value.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_sequence</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_sequence</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>When more than one dimension is interpolated, interpolation_sequence define the
            ordering. Sequence value 1 was interpolated first, directly from calibration; sequence value 2
            was interpolated from those results, etc.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Integer</value_data_type>
            <minimum_value>0</minimum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_value</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_value</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_value specifies the value of the variable to which the model was
            interpolated. The interpretation of the value depends on what the variable is and should
            be documented in the mission documentation.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>interpolation_variable</name>
        <version_id>1.0</version_id>
        <local_identifier>interpolation_variable</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The interpolation_variable defines the parameter across which interpolation is 
            being performed. Examples of variables include Focus, Zoom, and Temperature.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>model_type</name>
        <version_id>1.0</version_id>
        <local_identifier>model_type</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The model_type attribute specifies an identifier for the 
            type or kind of model. The value should be one of a well defined set, 
            providing an application program with sufficient information to know 
            how to handle the rest of the parameters within the model. This 
            value will correlate directly with the specific camera model class 
            that is a subclass of the Camera_Model_Parameters class.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>CAHV</value>
                <value_meaning>The CAHV model is a linear, perspective-projection camera model
                    (equivalent to a pinhole camera).</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CAHVOR</value>
                <value_meaning>The CAHVOR model is built upon CAHV (see CAHV_Model), adding
                    radial (barrel or pincushion) distortion to the linear model.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CAHVORE</value>
                <value_meaning>The CAHVORE model is built upon CAHVOR (see CAHVOR_Model),
                    adding support for fisheye lenses.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>PSPH</value>
                <value_meaning>The PSPH model is designed to perform better fisheye-image
                    rectification prior to 1D stereo correlation.</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>positive_azimuth_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>positive_azimuth_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The positive_azimuth_direction attribute specifies the direction in which
            azimuth is measured in positive degrees for an observer on the surface of a body.
            The azimuth is measured with respect to the elevation reference plane. A value of
            'clockwise' indicates that azimuth is measured positively clockwise, and
            'counterclockwise' indicates that azimuth increases positively counter-clockwise.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
            <DD_Permissible_Value>
                <value>Clockwise</value>
                <value_meaning>Indicates that azimuth is measured positively Clockwise.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Counterclockwise</value>
                <value_meaning>Indicates that azimuth is measured positively Counter-clockwise.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CW</value>
                <value_meaning>Indicates that azimuth is measured positively Clockwise.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>CCW</value>
                <value_meaning>Indicates that azimuth is measured positively Counter-clockwise.</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>positive_elevation_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>positive_elevation_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The positive_elevation_direction attribute provides the direction in which elevation is 
            measured in positive degrees for an observer on the surface of a body. The elevation is measured 
            with respect to the azimuthal reference plane. A value of UP or ZENITH indicates that elevation is 
            measured positively upwards, i.e., the zenith point would be at +90 degrees and the nadir point at 
            -90 degrees. DOWN or NADIR indicates that the elevation is measured positively downwards; the 
            zenith point would be at -90 degrees and the nadir point at +90 degrees.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <unit_of_measure_type>Units_of_None</unit_of_measure_type>
            <DD_Permissible_Value>
                <value>Up</value>
                <value_meaning>Indicates that elevation is measured positively upwards, i.e., the zenith point would
                    be at +90 degrees and the nadir point at -90 degrees.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Zenith</value>
                <value_meaning>Indicates that elevation is measured positively upwards, i.e., the zenith point would
                    be at +90 degrees and the nadir point at -90 degrees.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Down</value>
                <value_meaning>Indicates that the elevation is measured positively downwards, i.e. the 
                    zenith point would be at -90 degrees and the nadir point at +90 degrees.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Nadir</value>
                <value_meaning>Indicates that the elevation is measured positively downwards, i.e. the 
                    zenith point would be at -90 degrees and the nadir point at +90 degrees.</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>psph_model_scale_x</name>
        <version_id>1.0</version_id>
        <local_identifier>psph_model_scale_x</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Column scale factor to convert between x coordinate and 
            rotation around axis x, expressed in radians/pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>psph_model_scale_y</name>
        <version_id>1.0</version_id>
        <local_identifier>psph_model_scale_y</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>
            Column scale factor to convert between y coordinate and 
            rotation around axis y, expressed in radians/pixel.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>quaternion_measurement_method</name>
        <version_id>1.1</version_id>
        <local_identifier>quaternion_measurement_method</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Bob Deen</submitter_name>
        <definition>Specifies the method by which the coordinate space was measured. This 
            provides an indication of the quality of the definition.</definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Unknown</value>
                <value_meaning>The attitude should not be trusted.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Tilt_Only</value>
                <value_meaning>The attitude estimate is only good for tilt (2-axis) determination.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Coarse</value>
                <value_meaning>The attitude estimate is complete (3-axis), but crude.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Fine</value>
                <value_meaning>The attitude estimate is complete.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Sun_Find</value>
                <value_meaning>Coordinate space orientation rotation was measured by finding the 
                    location of the sun in one or more images and comparing that to where the sun 
                    actually was at that time.</value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Bundle_Adjustment</value>
                <value_meaning>Coordinate space position and/or orientation was refined using a 
                    bundle adjustment process, minimizing error with respect to some fixed reference 
                    (such as an orbital map).</value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>rotation_direction</name>
        <version_id>1.0</version_id>
        <local_identifier>rotation_direction</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>The rotation_direction attribute identifies the 
            direction of the rotation for a specific quaternion. This is 
            used when the two frames involved are unambiguously identifed
            in the enclosing classes. 
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>true</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
            <DD_Permissible_Value>
                <value>Present to Reference</value>
                <value_meaning>The quaternion rotates the frame identifed by 
                    Coordinate_Space_Present to the frame identified by
                    Coordinate_Space_Reference.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Reference to Present</value>
                <value_meaning>The quaternion rotates the frame identifed by 
                    Coordinate_Space_Reference to the frame identified by
                    Coordinate_Space_Present.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Forward</value>
                <value_meaning>Reference frames are generally defined sequentially 
                    from a base reference frame (e.g., base frames might be ICRF, IAU 
                    Mars, or the landing site from which a rover begins its exploration).
                    rotation_direction = Forward corresponds to rotation in the 'direction' 
                    from the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Reverse</value>
                <value_meaning>Reference frames are generally defined sequentially 
                    from a base reference frame (e.g., base frames might be ICRF, IAU 
                    Mars, or the landing site from which a rover begins its exploration).
                    rotation_direction = Reverse corresponds to rotation toward the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>From Base</value>
                <value_meaning>Reference frames are generally defined sequentially 
                    from a base reference frame (e.g., base frames might be ICRF, IAU 
                    Mars, or the landing site from which a rover begins its exploration).
                    rotation_direction = Away From Base corresponds to rotation in the 'direction' 
                    from the base frame.
                </value_meaning>
            </DD_Permissible_Value>
            <DD_Permissible_Value>
                <value>Toward Base</value>
                <value_meaning>Reference frames are generally defined sequentially 
                    from a base reference frame (e.g., base frames might be ICRF, IAU 
                    Mars, or the landing site from which a rover begins its exploration).
                    rotation_direction = Toward Base corresponds to rotation toward the base frame.
                </value_meaning>
            </DD_Permissible_Value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>selected_instrument_id</name>
        <version_id>1.0</version_id>
        <local_identifier>selected_instrument_id</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The selected_instrument_id attribute specifies an abbreviated name or acronym 
            that identifies the selected instrument mounted on the articulation device.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Short_String_Collapsed</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>solar_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The solar_azimuth attribute specifies one of two angular measurements
            indicating the direction to the Sun as measured from a specific point on the
            surface of a planet (eg., from a lander or rover). The positive direction of 
            azimuth is set by the positive_azimuth_direction attribute in the reference
            coordinate space. The azimuth is measured in the clockwise or counterclockwise
            direction (as viewed from above) with the meridian passing through the positive
            spin axis of the planet (i.e., the north pole) defining the zero reference.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0.0</minimum_value>
            <maximum_value>360.0</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>solar_elevation</name>
        <version_id>1.0</version_id>
        <local_identifier>solar_elevation</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The solar_elevation attribute specifies one of two angular measurements
            indicating the direction to the Sun as measured from a specific point on the surface
            of a planet (eg., from a lander or rover). The positive direction of the elevation
            is set by the positive_elevation_direction attribute in the reference coordinate
            space. The elevation is measured from the plane which is normal to the line passing
            between the surface point and the planet's center of mass, and that intersects the surface point.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-90.0</minimum_value>
            <maximum_value>90.0</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>start_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>start_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The start_azimuth attribute specifies the angular distance from a fixed
            reference position at which an image or observation starts. Azimuth is measured
            in a spherical coordinate system, in a plane normal to the principal axis. Azimuth
            values increase according to the right hand rule relative to the positive direction
            of the principal axis of the spherical coordinate system. When applied to a site
            or surface projection coordinate space, specifies the azimuth of the left edge of
            the output map. Applies to Cylindrical and Cylindrical-Perspective projections only.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0.0</minimum_value>
            <maximum_value>360.0</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>stop_azimuth</name>
        <version_id>1.0</version_id>
        <local_identifier>stop_azimuth</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The stop_azimuth attribute specifies the angular distance from a fixed
            reference position at which an image or observation stops. Azimuth is measured
            in a spherical coordinate system, in a plane normal to the principal axis. Azimuth
            values increase according to the right hand rule relative to the positive direction
            of the principal axis of the spherical coordinate system. When applied to a site or
            surface projection coordinate space, specifies the azimuth of the right edge of the
            output map. Applies to Cylindrical and Cylindrical-Perspective projections only.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>0.0</minimum_value>
            <maximum_value>360.0</maximum_value>
            <unit_of_measure_type>Units_of_Angle</unit_of_measure_type>
            <specified_unit_id>deg</specified_unit_id>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>x</name>
        <version_id>1.0</version_id>
        <local_identifier>x</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>x_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>x_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>x_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>x_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The x component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>y</name>
        <version_id>1.0</version_id>
        <local_identifier>y</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>y_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>y_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>y_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>y_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The y component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>z</name>
        <version_id>1.0</version_id>
        <local_identifier>z</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a Cartesian vector which has no units.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>z_pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>z_pixel</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a Cartesian pixel vector; typically used 
            in cameral models.
        </definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <DD_Attribute>
        <name>z_unit</name>
        <version_id>1.0</version_id>
        <local_identifier>z_unit</local_identifier>
        <nillable_flag>false</nillable_flag>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The z component of a unit Cartesian vector.</definition>
        <DD_Value_Domain>
            <enumeration_flag>false</enumeration_flag>
            <value_data_type>ASCII_Real</value_data_type>
            <minimum_value>-1</minimum_value>
            <maximum_value>1</maximum_value>
        </DD_Value_Domain>
    </DD_Attribute>
    
    <!-- Classes -->
    
    <!-- Nesting Level 1 -->
    
    <DD_Class>
        <name>Geometry_Lander</name>
        <version_id>1.0</version_id>
        <local_identifier>Geometry_Lander</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Geometry_Lander class is a container for all geometric information in the label
            relating to a landed spacecraft, including rovers.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Articulation_Device_Parameters</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Camera_Model_Parameters</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Definition</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Derived_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Motion_Counter</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 2 -->
    
    <DD_Class>
        <name>Articulation_Device_Parameters</name>
        <version_id>3.0</version_id>
        <local_identifier>Articulation_Device_Parameters</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Articulation_Device_Parameters class contains those 
            attributes and sub-classes that describe an articulation device. 
            An articulation device is anything that can move independently 
            of the spacecraft to which it is attached. Examples include mast 
            heads, wheel bogies, arms, filter wheel, scan platforms.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_mode</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>device_phase</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>selected_instrument_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Device_Angle</identifier_reference>
            <identifier_reference>Device_Component_State</identifier_reference>
            <identifier_reference>Device_Motor_Counts</identifier_reference>
            <identifier_reference>Vector_Device_Gravity</identifier_reference>
            <identifier_reference>Device_Temperature</identifier_reference>
            <identifier_reference>Coordinate_Space_Present</identifier_reference>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <identifier_reference>Commanded_Geometry</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Camera_Model_Parameters</name>
        <version_id>2.0</version_id>
        <local_identifier>Camera_Model_Parameters</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>A camera model describes the mathematical relationship
            between the coordinates of a point in 3-dimensional space and its
            projection onto a 2-dimensional image plane.  There are numerous
            types of camera models.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>model_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>calibration_source_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>solution_id</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Associate_External_Class>
            <namespace_id>pds</namespace_id>
            <class_name>Internal_Reference</class_name>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
            <DD_Context_Value_List>
                <attribute_name>reference_type</attribute_name>
                <attribute_relative_xpath>geom:Camera_Model_Parameters/pds:Internal_Reference/pds:reference_type</attribute_relative_xpath>
                <DD_Permissible_Value>
                    <value>geometry_to_camera_model</value>
                    <value_meaning>The reference is to another PDS product containing camera model description.</value_meaning>
                </DD_Permissible_Value>
            </DD_Context_Value_List>
        </DD_Associate_External_Class>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>CAHV_Model</identifier_reference>
            <identifier_reference>CAHVOR_Model</identifier_reference>
            <identifier_reference>CAHVORE_Model</identifier_reference>
            <identifier_reference>PSPH_Model</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>Reference_Frame_Identification</identifier_reference>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Model_Transform</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Model_Transform</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Interpolation</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_Definition</name>
        <version_id>3.0</version_id>
        <local_identifier>Coordinate_Space_Definition</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space classes are typically used for lander/rover 
            geometry while the Coordinate_System construction is used for 
            orbiter/flyby geometry. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>positive_azimuth_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>positive_elevation_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Present</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Origin_Offset</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Quaternion_Plus_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>quaternion_measurement_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Quality</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Derived_Geometry</name>
        <version_id>4.0</version_id>
        <local_identifier>Derived_Geometry</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Derived_Geometry class is a container for surface based observations 
            (lander or rover). It is used to provide some geometric quantities relative to a 
            specific Reference Coordinate Space.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>XSChoice#</identifier_reference>
            <identifier_reference>incidence_angle</identifier_reference>
            <identifier_reference>emission_angle</identifier_reference>
            <identifier_reference>phase_angle</identifier_reference>
            <identifier_reference>instrument_azimuth</identifier_reference>
            <identifier_reference>instrument_elevation</identifier_reference>
            <identifier_reference>solar_azimuth</identifier_reference>
            <identifier_reference>solar_elevation</identifier_reference>
            <identifier_reference>start_azimuth</identifier_reference>
            <identifier_reference>stop_azimuth</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Solar_Direction</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Motion_Counter</name>
        <version_id>1.0</version_id>
        <local_identifier>Motion_Counter</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Motion_Counter class provides a set of integers that
            describe a (potentially) unique location (position / orientation) for a
            rover or other movable object. Each time an event occurs that results in  
            a movement, a new motion counter value is created. This includes 
            intentional motion due to drive commands, as well as potential motion
            due to other articulating devices, such as arms or antennae. This motion
            counter (or part of it) is used as a reference to define instances of
            coordinate systems that can move such as SITE or ROVER frames. The 
            motion counter is defined in a mission-specific manner. Although the 
            original intent was to have incrementing indices (e.g., MER), the motion 
            counter could also contain any integer values that conform to the above 
            definition, such as time or spacecraft clock values.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.name</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Motion_Counter_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 3 -->
    
    <DD_Class>
        <name>CAHV_Model</name>
        <version_id>3.0</version_id>
        <local_identifier>CAHV_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHV model is a linear, perspective-projection camera model
            (equivalent to a pinhole camera).  It consists of four 3-vectors (C,A,H,V)
            that describe the internal and external camera model parameters needed to
            translate between 2D image coordinates and 3D world coordinates.  C
            (Vector_Center) is the 3D position of the pinhole (center of the entrance
            pupil).  A (Vector_Axis) is a unit vector normal to the image plane
            pointing outward.  H (Vector_Horizontal) is a composite vector encoding
            three quantities: H' (a vector in the image plane perpendicular to the
            vertical columns), Hs (the distance between the lens center and image
            plane, measured in horizontal pixels), and Hc (the horizontal image
            coordinate directly under C when moving parallel to A).  V
            (Vector_Vertical) similarly composites the analogous V', Vs, and Vc in
            the vertical direction.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Center</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Horizontal</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Vertical</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>CAHVOR_Model</name>
        <version_id>2.0</version_id>
        <local_identifier>CAHVOR_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHVOR model is built upon CAHV (see CAHV_Model), adding
            radial (barrel or pincushion) distortion to the linear model.  It adds
            two more 3-vectors to CAHV.  O (Vector_Optical) is a unit vector
            representing the axis of symmetry for the radial distortion.  R
            (Radial_Terms) contains the coefficients of a polynomial function
            that describes the radial distortion.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Optical</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Radial_Terms</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>CAHV_Model</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>CAHVORE_Model</name>
        <version_id>3.0</version_id>
        <local_identifier>CAHVORE_Model</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The CAHVORE model is built upon CAHVOR (see CAHVOR_Model),
            adding support for fisheye lenses.  It adds one more 3-vector and
            two scalars to CAHVOR.  E (Entrance_Terms) contains the coefficients
            of a polynomial function used to model movement of the entrance pupil.
            The two scalars, cahvore_model_type and cahvore_model_parameter,
            together specify the type of lens being modeled. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Entrance_Terms</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>cahvore_model_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>cahvore_model_parameter</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>CAHVOR_Model</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Commanded_Geometry</name>
        <version_id>1.0</version_id>
        <local_identifier>Commanded_Geometry</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Specifies how the device was commanded in order to achieve the state
            represented in the enclosing Articulation_Device_Parameters. Commands
            are often at a higher level, e.g. point at this location or move to 
            this XYZ, which is translated by flight software to the actual pose 
            of the device. Certain forms of command are measured in a coordinate 
            frame; this is specified by the Coordinate_Space_Reference in this class 
            (if not present, the Coordinate_Space_Reference in the 
            Articulation_Device_Parameters parent should be assumed).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>command_type</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Angle</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Commanded_Position</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Reference</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_Present</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_Present</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Coordinate_Space_Present class  includes the attributes 
            that identifies the coordinate space presently being defined.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Coordinate_Space_Identification</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Coordinate_Space_Quality</name>
        <version_id>1.0</version_id>
        <local_identifier>Coordinate_Space_Quality</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>Parameters that indicate the quality of the coordinate
            space knowledge.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>quaternion_measurement_method</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>attitude_propagation_counter</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>attitude_propagation_duration</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Angle</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Angle</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Angle class is a container for the set of
            angles between the various components or devices of the spacecraft.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Angle_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Component_State</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Component_State</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Component_State class is a container for the
            states of the various components of the articulation device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Component_State_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Motor_Counts</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Motor_Counts</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Motor_Counts class is a container for the classes
            that describe the motor step count information for device components.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Motor_Counts_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Temperature</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Temperature</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Temperature class is a container for all 
            available device temperatures of an articulated device and/or 
            part(s) of a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>pds.local_identifier</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Device_Temperature_Index</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>*</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Interpolation</name>
        <version_id>1.0</version_id>
        <local_identifier>Interpolation</local_identifier>
        <submitter_name>Bob Deen</submitter_name>
        <definition>The Interpolation class defines how the camera model was interpolated from the 
            calibration models. Interpolation is used to create models in a variable space (e.g., focus,
            zoom) between points at which calibration was performed. If more than one dimension of
            variables were interpolated, multiple Interpolation objects can exist, with interpolation_sequence
            defining the order.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>interpolation_algorithm</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_variable</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_value</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>interpolation_sequence</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>0</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Motion_Counter_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Motion_Counter_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Motion_Counter_Index class identifies and populates
            one element of a Motion_Counter list.  The class should be repeated
            for each element of the list.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>PSPH_Model</name>
        <version_id>1.0</version_id>
        <local_identifier>PSPH_Model</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            A new camera model designed to perform better fisheye-image rectification
            prior to 1D stereo correlation. The primary innovation is the use of a 
            unit projection sphere rather than an image plane. For epipolar alignment 
            between stereo cameras the rows (for a left/right pair) or the columns
            (for an up/down pair) of both must lie along the same plane. Thus we use 
            a pair of planes to define the rows and columns. Each plane will rotate 
            around a static dedicated axis passing through the sphere center. Pixels 
            will be located where the planes intersect with each other and the unit sphere.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Center</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis_X</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Axis_Y</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Normal_X</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>Vector_Normal_Y</identifier_reference>
            <reference_type>component_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>psph_model_scale_x</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>psph_model_scale_y</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Quaternion_Model_Transform</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Model_Transform</local_identifier>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The Quaternion_Model_Transform class specifies, along with Vector_Model_Transform
            class, the transform used for the camera model in an image. Camera models created by the
            calibration process have associated with them a pose, comprised of the position (offset)
            and orientation (quaternion) of the camera at the time it was calibrated. The model is
            transformed ("pointed") for a specific image by computing, generally using articulation
            device kinematics, a final pose for the image. The camera model is then translated and
            rotated from the calibration to final pose. This class specifies the quaternion portion
            of the final pose.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Quaternion_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Quaternion_Plus_Direction</name>
        <version_id>1.0</version_id>
        <local_identifier>Quaternion_Plus_Direction</local_identifier>
        <submitter_name>Mitchell K. Gordon</submitter_name>
        <definition>Quaternion_Plus_Direction provides the four elements of a quaternion and its  
            direction of rotation. The two end point frames must be identified in 
            the enclosing class. See the definition of Quaternion_Base for more details 
            on the quaternion classes in this dictionary.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Quaternion_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>rotation_direction</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Device_Gravity</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Device_Gravity</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Device_Gravity class is a unit vector that specifies 
            the direction of an external force acting on the articulation 
            device, in the spacecraft's coordinate system, at the time the pose was computed.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Model_Transform</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Model_Transform</local_identifier>
        <submitter_name>Jordan Padams</submitter_name>
        <definition>The Vector_Model_Transform class specifies, along with the Quaternion_Model_Transform
            class, the transform used for the camera model in this image. Camera models created by the
            calibration process have associated with them a pose, comprised of the position (offset)
            and orientation (quaternion) of the camera at the time it was calibrated. The model is
            transformed ("pointed") for a specific image by computing, generally using articulation device
            kinematics, a final pose for the image. The camera model is then translated and rotated from
            the calibration to final pose. This class specifies the offset portion of the final pose.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Origin_Offset</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Origin_Offset</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Origin_Offset class contains attributes that 
            specify the offset from the reference coordinate system's origin 
            to the origin of the coordinate system. It is the location of the 
            current system's origin as measured in the reference system.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Solar_Direction</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Solar_Direction</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Unit vector pointing in the direction of the Sun at the time of the observation.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting_Level 4 -->
    
    <DD_Class>
        <name>Commanded_Position</name>
        <version_id>1.0</version_id>
        <local_identifier>Commanded_Position</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Specifies a Cartesian position used in commanding the device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Angle_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Angle_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Angle class is a container for the set of
            angles the spacecraft device specified in the parent 
            Articulation_Device_Parameters class.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Angle</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Component_State_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Component_State_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Component_State_Index class is a container 
            for one state of a component of the articulation device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Text</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Motor_Counts_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Motor_Counts_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Motor_Counts_Index class is a container 
            for the attributes that describe the motor step count information 
            for a single motor on a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_No_Units</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Device_Temperature_Index</name>
        <version_id>1.0</version_id>
        <local_identifier>Device_Temperature_Index</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Device_Temperature_Index class specifies the 
            attributes describing the temperature of one device or some part of a device.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>List_Index_Temperature</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Entrance_Terms</name>
        <version_id>1.0</version_id>
        <local_identifier>Entrance_Terms</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Entrance_Terms contains the coefficients of a polynomial
            function used to model movement of the entrance pupil.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Polynomial_Coefficients_3</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Radial_Terms</name>
        <version_id>2.0</version_id>
        <local_identifier>Radial_Terms</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>Radial_Terms contains the coefficients of a polynomial
            function used to describe the radial distortion of the camera. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Polynomial_Coefficients_3</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Axis</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Axis</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Axis is a unit vector that describes the axis  
            of the camera, defined as the normal to the image plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Axis_X</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Axis_X</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Unit column-plane rotation axis, passing through the sphere center,
            typically vertical and pointing down so that positive rotations
            (by the right-hand rule) will rotate the forward half of the plane
            in the (rightward) direction of increasing column (as projected on 
            the forward hemisphere).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Axis_Y</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Axis_Y</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Unit row-plane rotation axis, passing through the sphere center,
            typically horizontal and pointing left so that positive rotations
            (by the right-hand rule) will rotate the forward half of the plane
            in the (downward) direction of increasing row (as projected on 
            the forward hemisphere).
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!--Vector_Cartesian_No_Units used as base class -->
        <name>Vector_Cartesian_No_Units</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_No_Units</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This is a generic vector in Cartesian space.
            The "x", "y", and "z" component have no units.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class> <!-- Vector_Cartesian_Unit used as base class -->
        <name>Vector_Cartesian_Unit</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Unit</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This is a generic unit vector in Cartesian space.
            The "x", "y", and "z" component have no units and are restricted to
            values between -1.0 and 1.0 inclusive. Further the length of the 
            vector square root of the (sum of the squares of the components) must be 1.0.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_unit</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Center</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Center</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Center describes the location of the entrance
            pupil of a camera.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Position_Base</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Horizontal</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Horizontal</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Horizonal is a composite vector encoding three
            quantities: H' (a vector in the image plane perpendicular to the
            vertical columns), Hs (the distance between the lens center and
            image plane, measured in horizontal pixels), and Hc (the horizontal
            image coordinate directly under C when moving parallel to A).  H' is
            often thought of as describing the orientation of rows in space,
            but is actually perpendicular to the columns.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Pixel</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Normal_X</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Normal_X</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Unit normal vector to the column plane when x equals zero,
            pointing in the same direction as the cross product of axis x
            with an outward-pointing vector that also lies in the plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Normal_Y</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Normal_Y</local_identifier>
        <submitter_name>Bob Dean</submitter_name>
        <definition>
            Unit normal vector to the row plane when y equals zero,
            pointing in the same direction as the cross product of
            axis x with an outward-pointing vector that also lies in
            the plane.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Optical</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Optical</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Optical is a unit vector that describes the axis of
            symmetry for radial distortion in the camera. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Unit</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Vertical</name>
        <version_id>2.0</version_id>
        <local_identifier>Vector_Vertical</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Vector_Vertical is a composite vector encoding three
            quantities: V' (a vector in the image plane perpendicular to the
            horizontal rows), Vs (the distance between the lens center and
            image plane, measured in vertical pixels), and Vc (the vertical
            image coordinate directly under C when moving parallel to A).  V' is
            often thought of as describing the orientation of columns in space,
            but is actually perpendicular to the rows. 
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>Vector_Cartesian_Pixel</identifier_reference>
            <reference_type>parent_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 5 -->
    
    <DD_Class>
        <name>Polynomial_Coefficients_3</name>
        <version_id>1.0</version_id>
        <local_identifier>Polynomial_Coefficients_3</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>The Polynomial_Coefficients_3 class provides three polynomial coefficients.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>c0</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>c1</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>c2</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <DD_Class>
        <name>Vector_Cartesian_Pixel</name>
        <version_id>1.0</version_id>
        <local_identifier>Vector_Cartesian_Pixel</local_identifier>
        <submitter_name>Elizabeth Rye</submitter_name>
        <definition>This a Cartesian pixel vector generally used in camera models.
        </definition>
        <abstract_flag>false</abstract_flag>
        <element_flag>false</element_flag>
        <DD_Association>
            <identifier_reference>x_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>y_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
        <DD_Association>
            <identifier_reference>z_pixel</identifier_reference>
            <reference_type>attribute_of</reference_type>
            <minimum_occurrences>1</minimum_occurrences>
            <maximum_occurrences>1</maximum_occurrences>
        </DD_Association>
    </DD_Class>
    
    <!-- Nesting Level 6 -->
    
    <!-- Schematron Rules -->
</Ingest_LDD>